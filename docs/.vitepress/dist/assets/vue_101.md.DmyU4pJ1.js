import{_ as t,D as a,c as s,I as o,w as c,a4 as r,o as l,a as d}from"./chunks/framework.2gWjYe7W.js";const x=JSON.parse('{"title":"v-show 和 v-if 的区别","description":"","frontmatter":{},"headers":[],"relativePath":"vue/101.md","filePath":"vue/101.md","lastUpdated":null}'),i={name:"vue/101.md"},p=r('<h1 id="v-show-和-v-if-的区别" tabindex="-1"><code>v-show</code> 和 <code>v-if</code> 的区别 <a class="header-anchor" href="#v-show-和-v-if-的区别" aria-label="Permalink to &quot;`v-show` 和 `v-if` 的区别&quot;">​</a></h1><ul><li><p>控制手段不同:<code>v-show</code>隐藏则是为该元素添加<code>css--display:none</code>，<code>dom</code>元素依旧还在。<code>v-if</code>显示隐藏是将<code>dom</code>元素整个添加或删除</p></li><li><p>编译过程不同: <code>v-if</code>切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；<code>v-show</code>只是简单的基于css切换</p></li><li><p>编译条件不同：<code>v-if</code>是真正的条件渲染，它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。只有渲染条件为假时，并不做操作，直到为真才渲染</p></li><li><p><code>v-show</code> 由<code>false</code>变为<code>true</code>的时候不会触发组件的生命周期</p></li><li><p><code>v-if</code>由<code>false</code>变为<code>true</code>的时候，触发组件的<code>beforeCreate</code>、<code>create</code>、<code>beforeMount</code>、<code>mounted</code>钩子，由<code>true</code>变为<code>false</code>的时候触发组件的<code>beforeDestory</code>、<code>destoryed</code>方法</p></li></ul><p>性能消耗：<code>v-if</code>有更高的切换消耗；<code>v-show</code>有更高的初始渲染消耗；</p>',3);function n(_,v,f,u,h,m){const e=a("Bookmark");return l(),s("div",null,[p,o(e,null,{default:c(()=>[d("[Vue2 模板编译](https://v2.template-explorer.vuejs.org/)")]),_:1}),o(e,null,{default:c(()=>[d(" [Vue3 模板编译](https://template-explorer.vuejs.org/)")]),_:1})])}const k=t(i,[["render",n]]);export{x as __pageData,k as default};
