import{_ as t,c as e,o as a,a4 as o,am as l}from"./chunks/framework.2gWjYe7W.js";const m=JSON.parse('{"title":"如何理解 OSI 七层模型？","description":"","frontmatter":{},"headers":[],"relativePath":"net/01.md","filePath":"net/01.md","lastUpdated":null}'),i={name:"net/01.md"},n=o('<h1 id="如何理解-osi-七层模型" tabindex="-1">如何理解 OSI 七层模型？ <a class="header-anchor" href="#如何理解-osi-七层模型" aria-label="Permalink to &quot;如何理解 OSI 七层模型？&quot;">​</a></h1><p>OSI（Open Systems Interconnection）七层模型，是理想化的模型，模型将网络通信过程分为七个不同的层次，每个层次都有特定的任务和功能（可以更容易地设计、维护和故障排除）。其目的是将复杂的流程简单化，从而实现分而治之。</p><h2 id="网络分层的含义" tabindex="-1">网络分层的含义? <a class="header-anchor" href="#网络分层的含义" aria-label="Permalink to &quot;网络分层的含义?&quot;">​</a></h2><blockquote><p>下层是为了上层提供服务的。</p></blockquote><ul><li>应用层： 用户应用程序和网络服务进行交互，通过不同的应用层协议为不同的网络应用提供服务。（用户最终使用的接口） <strong>常用协议 HTTP、SMTP、FTP、DNS</strong></li><li>表示层： 处理数据的格式和编码，以及数据加密、压缩和数据转。</li><li>会话层： 负责建立、管理和终止通信会话。如会话初始化和维护。</li><li>传输层：提供端到端的数据传输和错误检测。管理数据的分段、流量控制和可靠传输。 <strong>常用协议 TCP、UDP</strong></li><li>网络层：处理数据包的路由和转发，以确保数据在不同网络之间的传输。使用逻辑地址（如 IP 地址）来标识设备和网络。 <strong>常用协议 IP</strong></li><li>数据链路层：主要负责数据帧的传输和物理地址的分配。将数据组合成数据帧进行传递 (差错校测，可靠传输)</li><li>物理层：最底层的层次，处理物理介质和数据传输。（负责比特流的传输，主要是硬件）OSI 模型是理论上的参考模型，网络通信更常用的是 TCP/IP 模型。</li></ul><p><img src="'+l+'" alt="" loading="lazy"></p><blockquote><p>OSI 模型是理论上的参考模型，网络通信更常用的是 TCP/IP 模型。</p></blockquote>',7),s=[n];function r(c,_,d,p,P,h){return a(),e("div",null,s)}const S=t(i,[["render",r]]);export{m as __pageData,S as default};
