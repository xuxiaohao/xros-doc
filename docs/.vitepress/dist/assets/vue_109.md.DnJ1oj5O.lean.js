import{_ as t,D as h,c as l,I as e,w as n,j as s,a as i,a4 as r,o as p}from"./chunks/framework.2gWjYe7W.js";const f=JSON.parse('{"title":"Vue 项目中的错误处理方式","description":"","frontmatter":{},"headers":[],"relativePath":"vue/109.md","filePath":"vue/109.md","lastUpdated":null}'),k={name:"vue/109.md"},d=s("h1",{id:"vue-项目中的错误处理方式",tabindex:"-1"},[i("Vue 项目中的错误处理方式 "),s("a",{class:"header-anchor",href:"#vue-项目中的错误处理方式","aria-label":'Permalink to "Vue 项目中的错误处理方式"'},"​")],-1),E=s("h2",{id:"_1-1-errorcaptured-钩子",tabindex:"-1"},[i("1.1 errorCaptured 钩子 "),s("a",{class:"header-anchor",href:"#_1-1-errorcaptured-钩子","aria-label":'Permalink to "1.1 errorCaptured 钩子"'},"​")],-1),o=s("p",null,[i("可以捕获一个来自后代组件的错误时被调用，如果全局的 "),s("code",null,"config.errorHandler"),i(" 被定义，所有的错误仍会发送它，因此这些错误仍然会向单一的分析服务的地方进行汇报。 父组件（errorCaptured）-》 子组件（errorCaptured）-》 孙子组件出错时，错误会一直向上抛。如果 errorCaptured 中返回 false 则会阻断传播。")],-1),c=r("",7);function g(y,u,_,F,m,v){const a=h("Bookmark");return p(),l("div",null,[d,E,o,e(a,null,{default:n(()=>[i("[异常捕获源码实现](https://github1s.com/vuejs/vue/blob/main/src/core/util/error.ts#L7-L8)")]),_:1}),c,e(a,null,{default:n(()=>[i(" [轻量级前端监控库mitojs](https://gitcode.com/mitojs/mitojs/overview?utm_source=artical_gitcode&isLogin=1) ")]),_:1})])}const C=t(k,[["render",g]]);export{f as __pageData,C as default};
