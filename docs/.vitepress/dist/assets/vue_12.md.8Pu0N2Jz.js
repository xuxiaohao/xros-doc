import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.2gWjYe7W.js";const u=JSON.parse('{"title":"Vue3有哪些新特性","description":"","frontmatter":{},"headers":[],"relativePath":"vue/12.md","filePath":"vue/12.md","lastUpdated":null}'),l={name:"vue/12.md"},n=t(`<h1 id="vue3有哪些新特性" tabindex="-1">Vue3有哪些新特性 <a class="header-anchor" href="#vue3有哪些新特性" aria-label="Permalink to &quot;Vue3有哪些新特性&quot;">​</a></h1><ul><li>Composition API <ul><li>使用函数的方式编写 vue 组件</li><li>响应式API</li></ul></li><li>SFC Composition API Syntax Sugar(&lt;script setup&gt;) <ul><li>单文件组合式API setup</li><li>让代码更简洁，性能更好（不需要借助代理对象）。</li></ul></li><li>Teleport <ul><li>类似于 React 中的 Portal 传送门组件，指定将组件渲染到某个容器中。</li><li>经常用于处理弹框组件和模态框组件。<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">open </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;打开模态框&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Teleport</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;div v-if=&quot;open&quot; class=&quot;modal&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;button @click=&quot;open = false&quot;&gt;关闭&lt;/button&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Teleport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li>Fragments <ul><li>Vue3 中允许组件中包含多个节点。 无需引入额外的 DOM 元素</li></ul></li><li>Emits Component Option <ul><li>Vue3 中默认绑定的事件会被绑定到根元素上，通过 <code>Emits</code> 选项可以将事件从 <code>attrs</code> 中移除。</li></ul></li><li>createRenderer API from @vue/runtime-core to create custom renderers <ul><li>提供自定义渲染器，可以在非 DOM 环境中使用 Vue 的运行时。</li></ul></li><li>SFC State-driven CSS Variables (v-bind in &lt;style&gt;) <ul><li>可以在 css 中使用 v-bind 绑定样式<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background: v-bind(color);</span></span></code></pre></div></li></ul></li><li>&lt;Suspense&gt; <ul><li>主要的作用优雅地处理异步组件的加载状态<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #default&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;!-- 可以配合async setup使用 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;AsyncComponent&gt;&lt;/AsyncComponent&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #fallback&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        正在加载异步组件...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ul></li></ul></li></ul><p><a href="https://v3-migration.vuejs.org/zh" target="_blank" rel="noreferrer"><strong>Vue3 迁移指南</strong></a></p>`,3),e=[n];function p(h,k,E,r,o,d){return a(),i("div",null,e)}const c=s(l,[["render",p]]);export{u as __pageData,c as default};
