import{_ as e,c as t,o as r,a4 as a}from"./chunks/framework.2gWjYe7W.js";const h=JSON.parse('{"title":"如何将 template 转换成 render 函数 ?","description":"","frontmatter":{},"headers":[],"relativePath":"vue/07.md","filePath":"vue/07.md","lastUpdated":null}'),o={name:"vue/07.md"},l=a('<h1 id="如何将-template-转换成-render-函数" tabindex="-1">如何将 template 转换成 render 函数 ? <a class="header-anchor" href="#如何将-template-转换成-render-函数" aria-label="Permalink to &quot;如何将 template 转换成 render 函数 ?&quot;">​</a></h1><p>Vue 中含有模版编译的功能，它的主要作用是将用户编写的 template 编译为 js 中可执行的 render 函数。</p><h2 id="vue-中的模版转化流程" tabindex="-1">Vue 中的模版转化流程 <a class="header-anchor" href="#vue-中的模版转化流程" aria-label="Permalink to &quot;Vue 中的模版转化流程&quot;">​</a></h2><ul><li>1.将 template 模板转换成<code>ast</code>语法树 - <code>parserHTML</code></li><li>2.Vue2 对静态语法做静态标记 - <code>optimize</code> / Vue3 对 ast 语法进行转化 - <code>transform</code></li><li>3.重新生成代码 - <code>codeGen</code></li></ul><p><a href="https://github1s.com/vuejs/vue/blob/main/src/platforms/web/runtime-with-compiler.ts#L21-L22" target="_blank" rel="noreferrer"><strong>Vue2 模板编译的过程</strong></a></p><p><a href="https://github.com/vuejs/core/blob/main/packages/compiler-core/src/compile.ts#L61" target="_blank" rel="noreferrer"><strong>Vue3 模版编译的过程</strong></a></p><blockquote><p>Vue3 中的模版转化，做了更多的优化操作。Vue2 仅仅是标记了静态节点而已~</p></blockquote>',7),c=[l];function s(n,d,i,p,u,_){return r(),t("div",null,c)}const f=e(o,[["render",s]]);export{h as __pageData,f as default};
